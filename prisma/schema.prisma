// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?

    luxorAccount        String?
    luxorApiKey         String?
    minerWatts          Int?
    electricityPriceNzd Float?
    coinAPIKey          String?
    capex          Float?

    accounts Account[]
    sessions Session[]
    hashing  HashDay[]
    disposals  Disposal[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model HashDay {
    id                  String   @id @default(cuid())
    date                DateTime
    efficiency          Float
    hashrate            Float
    revenue             Float
    uptimePercentage    Float
    uptimeTotalMinutes  Int
    uptimeTotalMachines Int
    averagePrice        Float
    userId              String
    user                User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model Disposal {
    id                  String   @id @default(cuid())
    date                DateTime
    amount              Float
    dollars             Float
    userId              String
    user                User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
